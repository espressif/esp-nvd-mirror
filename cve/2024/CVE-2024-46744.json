{"cve": {"id": "CVE-2024-46744", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-09-18T08:15:03.603", "lastModified": "2024-09-20T12:30:51.220", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nSquashfs: sanity check symbolic link size\n\nSyzkiller reports a \"KMSAN: uninit-value in pick_link\" bug.\n\nThis is caused by an uninitialised page, which is ultimately caused\nby a corrupted symbolic link size read from disk.\n\nThe reason why the corrupted symlink size causes an uninitialised\npage is due to the following sequence of events:\n\n1. squashfs_read_inode() is called to read the symbolic\n   link from disk.  This assigns the corrupted value\n   3875536935 to inode->i_size.\n\n2. Later squashfs_symlink_read_folio() is called, which assigns\n   this corrupted value to the length variable, which being a\n   signed int, overflows producing a negative number.\n\n3. The following loop that fills in the page contents checks that\n   the copied bytes is less than length, which being negative means\n   the loop is skipped, producing an uninitialised page.\n\nThis patch adds a sanity check which checks that the symbolic\nlink size is not larger than expected.\n\n--\n\nV2: fix spelling mistake."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: Squashfs: comprobaci\u00f3n de la integridad del tama\u00f1o del enlace simb\u00f3lico Syzkiller informa de un error \"KMSAN: uninit-value in pick_link\". Esto se debe a una p\u00e1gina no inicializada, que en \u00faltima instancia se debe a un tama\u00f1o de enlace simb\u00f3lico da\u00f1ado le\u00eddo desde el disco. La raz\u00f3n por la que el tama\u00f1o de enlace simb\u00f3lico da\u00f1ado provoca una p\u00e1gina no inicializada se debe a la siguiente secuencia de eventos: 1. Se llama a squashfs_read_inode() para leer el enlace simb\u00f3lico desde el disco. Esto asigna el valor da\u00f1ado 3875536935 a inode-&gt;i_size. 2. M\u00e1s tarde se llama a squashfs_symlink_read_folio(), que asigna este valor da\u00f1ado a la variable length, que, al ser un int con signo, se desborda produciendo un n\u00famero negativo. 3. El siguiente bucle que rellena el contenido de la p\u00e1gina comprueba que los bytes copiados sean menores que length, que, al ser negativo, significa que se omite el bucle, lo que produce una p\u00e1gina no inicializada. Este parche agrega una verificaci\u00f3n de cordura que verifica que el tama\u00f1o del enlace simb\u00f3lico no sea mayor al esperado. -- V2: corrige error ortogr\u00e1fico."}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/087f25b2d36adae19951114ffcbb7106ed405ebb", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/1b9451ba6f21478a75288ea3e3fca4be35e2a438", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/5c8906de98d0d7ad42ff3edf2cb6cd7e0ea658c4", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/810ee43d9cd245d138a2733d87a24858a23f577d", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/c3af7e460a526007e4bed1ce3623274a1a6afe5e", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/ef4e249971eb77ec33d74c5c3de1e2576faf6c90", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/f82cb7f24032ed023fc67d26ea9bf322d8431a90", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/fac5e82ab1334fc8ed6ff7183702df634bd1d93d", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}}