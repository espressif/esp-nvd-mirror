{"cve": {"id": "CVE-2024-49768", "sourceIdentifier": "security-advisories@github.com", "published": "2024-10-29T15:15:11.440", "lastModified": "2024-11-01T12:57:35.843", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "Waitress is a Web Server Gateway Interface server for Python 2 and 3. A remote client may send a request that is exactly recv_bytes (defaults to 8192) long, followed by a secondary request using HTTP pipelining. When request lookahead is disabled (default) we won't read any more requests, and when the first request fails due to a parsing error, we simply close the connection. However when request lookahead is enabled, it is possible to process and receive the first request, start sending the error message back to the client while we read the next request and queue it. This will allow the secondary request to be serviced by the worker thread while the connection should be closed. Waitress 3.0.1 fixes the race condition. As a workaround, disable channel_request_lookahead, this is set to 0 by default disabling this feature."}, {"lang": "es", "value": "Waitress es un servidor de interfaz de puerta de enlace de servidor web para Python 2 y 3. Un cliente remoto puede enviar una solicitud que tenga exactamente recv_bytes (el valor predeterminado es 8192), seguida de una solicitud secundaria mediante canalizaci\u00f3n HTTP. Cuando la b\u00fasqueda anticipada de solicitudes est\u00e1 deshabilitada (valor predeterminado), no leeremos m\u00e1s solicitudes y, cuando la primera solicitud falla debido a un error de an\u00e1lisis, simplemente cerramos la conexi\u00f3n. Sin embargo, cuando la b\u00fasqueda anticipada de solicitudes est\u00e1 habilitada, es posible procesar y recibir la primera solicitud, comenzar a enviar el mensaje de error al cliente mientras leemos la siguiente solicitud y la ponemos en cola. Esto permitir\u00e1 que el subproceso de trabajo atienda la solicitud secundaria mientras la conexi\u00f3n deber\u00eda estar cerrada. Waitress 3.0.1 corrige la condici\u00f3n de ejecuci\u00f3n. Como soluci\u00f3n alternativa, deshabilite channel_request_lookahead, que se establece en 0 de manera predeterminada, lo que deshabilita esta funci\u00f3n."}], "metrics": {"cvssMetricV31": [{"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 9.1, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.2}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-367"}, {"lang": "en", "value": "CWE-444"}]}], "references": [{"url": "https://github.com/Pylons/waitress/commit/e4359018537af376cf24bd13616d861e2fb76f65", "source": "security-advisories@github.com"}, {"url": "https://github.com/Pylons/waitress/security/advisories/GHSA-9298-4cf8-g4wj", "source": "security-advisories@github.com"}]}}