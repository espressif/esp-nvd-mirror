{"cve": {"id": "CVE-2024-56556", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-12-27T15:15:14.410", "lastModified": "2024-12-27T15:15:14.410", "vulnStatus": "Received", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nbinder: fix node UAF in binder_add_freeze_work()\n\nIn binder_add_freeze_work() we iterate over the proc->nodes with the\nproc->inner_lock held. However, this lock is temporarily dropped in\norder to acquire the node->lock first (lock nesting order). This can\nrace with binder_node_release() and trigger a use-after-free:\n\n  ==================================================================\n  BUG: KASAN: slab-use-after-free in _raw_spin_lock+0xe4/0x19c\n  Write of size 4 at addr ffff53c04c29dd04 by task freeze/640\n\n  CPU: 5 UID: 0 PID: 640 Comm: freeze Not tainted 6.11.0-07343-ga727812a8d45 #17\n  Hardware name: linux,dummy-virt (DT)\n  Call trace:\n   _raw_spin_lock+0xe4/0x19c\n   binder_add_freeze_work+0x148/0x478\n   binder_ioctl+0x1e70/0x25ac\n   __arm64_sys_ioctl+0x124/0x190\n\n  Allocated by task 637:\n   __kmalloc_cache_noprof+0x12c/0x27c\n   binder_new_node+0x50/0x700\n   binder_transaction+0x35ac/0x6f74\n   binder_thread_write+0xfb8/0x42a0\n   binder_ioctl+0x18f0/0x25ac\n   __arm64_sys_ioctl+0x124/0x190\n\n  Freed by task 637:\n   kfree+0xf0/0x330\n   binder_thread_read+0x1e88/0x3a68\n   binder_ioctl+0x16d8/0x25ac\n   __arm64_sys_ioctl+0x124/0x190\n  ==================================================================\n\nFix the race by taking a temporary reference on the node before\nreleasing the proc->inner lock. This ensures the node remains alive\nwhile in use."}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/38fbefeb2c140b581ed7de8117a5c90d6dd89c22", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/dc8aea47b928cc153b591b3558829ce42f685074", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}}