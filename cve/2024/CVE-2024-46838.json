{"cve": {"id": "CVE-2024-46838", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-09-27T13:15:15.920", "lastModified": "2024-09-30T12:45:57.823", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nuserfaultfd: don't BUG_ON() if khugepaged yanks our page table\n\nSince khugepaged was changed to allow retracting page tables in file\nmappings without holding the mmap lock, these BUG_ON()s are wrong - get\nrid of them.\n\nWe could also remove the preceding \"if (unlikely(...))\" block, but then we\ncould reach pte_offset_map_lock() with transhuge pages not just for file\nmappings but also for anonymous mappings - which would probably be fine\nbut I think is not necessarily expected."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: userfaultfd: no ejecutar BUG_ON() si khugepaged extrae nuestra tabla de p\u00e1ginas Dado que khugepaged se modific\u00f3 para permitir la extracci\u00f3n de tablas de p\u00e1ginas en asignaciones de archivos sin mantener el bloqueo mmap, estos BUG_ON() son incorrectos: desh\u00e1gase de ellos. Tambi\u00e9n podr\u00edamos eliminar el bloque \"if (unlikely(...))\" anterior, pero entonces podr\u00edamos llegar a pte_offset_map_lock() con p\u00e1ginas transhuge no solo para asignaciones de archivos sino tambi\u00e9n para asignaciones an\u00f3nimas, lo que probablemente estar\u00eda bien, pero creo que no es necesariamente lo esperado."}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/4828d207dc5161dc7ddf9a4f6dcfd80c7dd7d20a", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/4a594acc12d5954cdc71d4450a386748bf3d136a", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/db978287e908d48b209e374b00d847b2d785e0a9", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}}