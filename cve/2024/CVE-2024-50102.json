{"cve": {"id": "CVE-2024-50102", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-11-05T18:15:13.877", "lastModified": "2024-11-06T18:17:17.287", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86: fix user address masking non-canonical speculation issue\n\nIt turns out that AMD has a \"Meltdown Lite(tm)\" issue with non-canonical\naccesses in kernel space.  And so using just the high bit to decide\nwhether an access is in user space or kernel space ends up with the good\nold \"leak speculative data\" if you have the right gadget using the\nresult:\n\n  CVE-2020-12965 \u201cTransient Execution of Non-Canonical Accesses\u201c\n\nNow, the kernel surrounds the access with a STAC/CLAC pair, and those\ninstructions end up serializing execution on older Zen architectures,\nwhich closes the speculation window.\n\nBut that was true only up until Zen 5, which renames the AC bit [1].\nThat improves performance of STAC/CLAC a lot, but also means that the\nspeculation window is now open.\n\nNote that this affects not just the new address masking, but also the\nregular valid_user_address() check used by access_ok(), and the asm\nversion of the sign bit check in the get_user() helpers.\n\nIt does not affect put_user() or clear_user() variants, since there's no\nspeculative result to be used in a gadget for those operations."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: x86: se soluciona el problema de especulaci\u00f3n no can\u00f3nica de enmascaramiento de direcciones de usuario Resulta que AMD tiene un problema de \"Meltdown Lite(tm)\" con los accesos no can\u00f3nicos en el espacio del kernel. Y entonces, usar solo el bit alto para decidir si un acceso est\u00e1 en el espacio del usuario o en el espacio del kernel termina con la buena y vieja \"filtraci\u00f3n de datos especulativos\" si tienes el gadget correcto usando el resultado: CVE-2020-12965 \"Ejecuci\u00f3n transitoria de accesos no can\u00f3nicos\" Ahora, el kernel rodea el acceso con un par STAC/CLAC, y esas instrucciones terminan serializando la ejecuci\u00f3n en arquitecturas Zen m\u00e1s antiguas, lo que cierra la ventana de especulaci\u00f3n. Pero eso era cierto solo hasta Zen 5, que renombra el bit AC [1]. Eso mejora mucho el rendimiento de STAC/CLAC, pero tambi\u00e9n significa que la ventana de especulaci\u00f3n ahora est\u00e1 abierta. Tenga en cuenta que esto no solo afecta al nuevo enmascaramiento de direcci\u00f3n, sino tambi\u00e9n a la comprobaci\u00f3n regular valid_user_address() utilizada por access_ok() y a la versi\u00f3n asm de la comprobaci\u00f3n del bit de signo en los ayudantes get_user(). No afecta a las variantes put_user() o clear_user(), ya que no hay ning\u00fan resultado especulativo que se pueda utilizar en un gadget para esas operaciones."}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/291313693677a345d4f50aae3c68e28b469f601e", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/86e6b1547b3d013bc392adf775b89318441403c2", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}}