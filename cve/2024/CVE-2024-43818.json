{"cve": {"id": "CVE-2024-43818", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-08-17T10:15:08.080", "lastModified": "2024-08-19T12:59:59.177", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: amd: Adjust error handling in case of absent codec device\n\nacpi_get_first_physical_node() can return NULL in several cases (no such\ndevice, ACPI table error, reference count drop to 0, etc).\nExisting check just emit error message, but doesn't perform return.\nThen this NULL pointer is passed to devm_acpi_dev_add_driver_gpios()\nwhere it is dereferenced.\n\nAdjust this error handling by adding error code return.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ASoC: amd: ajustar el manejo de errores en caso de ausencia del dispositivo c\u00f3dec acpi_get_first_physical_node() puede devolver NULL en varios casos (no existe tal dispositivo, error en la tabla ACPI, recuento de referencias cae a 0, etc. ). La verificaci\u00f3n existente simplemente emite un mensaje de error, pero no realiza devoluci\u00f3n. Luego, este puntero NULL se pasa a devm_acpi_dev_add_driver_gpios() donde se elimina la referencia. Ajuste este manejo de errores agregando un retorno de c\u00f3digo de error. Encontrado por el Centro de verificaci\u00f3n de Linux (linuxtesting.org) con SVACE."}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/1ba9856cf7f6492b47c1edf853137f320d583db5", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/5080808c3339de2220c602ab7c7fa23dc6c1a5a3", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/99b642dac24f6d09ba3ebf1d690be8aefff86164", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/b1173d64edd276c957b6d09e1f971c85b38f1519", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}}