{"cve": {"id": "CVE-2024-43854", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-08-17T10:15:10.447", "lastModified": "2024-08-19T12:59:59.177", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nblock: initialize integrity buffer to zero before writing it to media\n\nMetadata added by bio_integrity_prep is using plain kmalloc, which leads\nto random kernel memory being written media.  For PI metadata this is\nlimited to the app tag that isn't used by kernel generated metadata,\nbut for non-PI metadata the entire buffer leaks kernel memory.\n\nFix this by adding the __GFP_ZERO flag to allocations for writes."}, {"lang": "es", "value": "En el kernel de Linux, se resolvi\u00f3 la siguiente vulnerabilidad: bloque: inicializa el b\u00fafer de integridad a cero antes de escribirlo en el medio. Los metadatos agregados por bio_integrity_prep utilizan kmalloc simple, lo que lleva a que la memoria del kernel se escriba en el medio de forma aleatoria. Para los metadatos de PI, esto se limita a la etiqueta de la aplicaci\u00f3n que no es utilizada por los metadatos generados por el kernel, pero para los metadatos que no son de PI, todo el b\u00fafer pierde memoria del kernel. Solucione este problema agregando el indicador __GFP_ZERO a las asignaciones para escrituras."}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/23a19655fb56f241e592041156dfb1c6d04da644", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/899ee2c3829c5ac14bfc7d3c4a5846c0b709b78f", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/cf6b45ea7a8df0f61bded1dc4a8561ac6ad143d2", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/d418313bd8f55c079a7da12651951b489a638ac1", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/ebc0e91ba76dc6544fff9f5b66408b1982806a00", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}}