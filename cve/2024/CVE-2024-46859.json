{"cve": {"id": "CVE-2024-46859", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-09-27T13:15:17.430", "lastModified": "2024-09-30T12:45:57.823", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nplatform/x86: panasonic-laptop: Fix SINF array out of bounds accesses\n\nThe panasonic laptop code in various places uses the SINF array with index\nvalues of 0 - SINF_CUR_BRIGHT(0x0d) without checking that the SINF array\nis big enough.\n\nNot all panasonic laptops have this many SINF array entries, for example\nthe Toughbook CF-18 model only has 10 SINF array entries. So it only\nsupports the AC+DC brightness entries and mute.\n\nCheck that the SINF array has a minimum size which covers all AC+DC\nbrightness entries and refuse to load if the SINF array is smaller.\n\nFor higher SINF indexes hide the sysfs attributes when the SINF array\ndoes not contain an entry for that attribute, avoiding show()/store()\naccessing the array out of bounds and add bounds checking to the probe()\nand resume() code accessing these."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: plataforma/x86: panasonic-laptop: Arreglar accesos fuera de los l\u00edmites a la matriz SINF El c\u00f3digo de la computadora port\u00e1til Panasonic en varios lugares usa la matriz SINF con valores de \u00edndice de 0 - SINF_CUR_BRIGHT(0x0d) sin verificar que la matriz SINF sea lo suficientemente grande. No todas las computadoras port\u00e1tiles Panasonic tienen esta cantidad de entradas de matriz SINF, por ejemplo, el modelo Toughbook CF-18 solo tiene 10 entradas de matriz SINF. Por lo tanto, solo admite las entradas de brillo AC+DC y silencio. Verifique que la matriz SINF tenga un tama\u00f1o m\u00ednimo que cubra todas las entradas de brillo AC+DC y reh\u00fase a cargar si la matriz SINF es m\u00e1s peque\u00f1a. Para \u00edndices SINF m\u00e1s altos, oculte los atributos sysfs cuando la matriz SINF no contenga una entrada para ese atributo, evitando que show()/store() acceda a la matriz fuera de los l\u00edmites y agregue verificaci\u00f3n de los l\u00edmites al c\u00f3digo probe() y resume() que accede a estos."}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/6821a82616f60aa72c5909b3e252ad97fb9f7e2a", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/9291fadbd2720a869b1d2fcf82305648e2e62a16", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/b38c19783286a71693c2194ed1b36665168c09c4", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/f52e98d16e9bd7dd2b3aef8e38db5cbc9899d6a4", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}}