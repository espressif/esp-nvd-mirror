{"cve": {"id": "CVE-2024-50227", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-11-09T11:15:08.383", "lastModified": "2024-11-12T13:56:24.513", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nthunderbolt: Fix KASAN reported stack out-of-bounds read in tb_retimer_scan()\n\nKASAN reported following issue:\n\n BUG: KASAN: stack-out-of-bounds in tb_retimer_scan+0xffe/0x1550 [thunderbolt]\n Read of size 4 at addr ffff88810111fc1c by task kworker/u56:0/11\n CPU: 0 UID: 0 PID: 11 Comm: kworker/u56:0 Tainted: G     U             6.11.0+ #1387\n Tainted: [U]=USER\n Workqueue: thunderbolt0 tb_handle_hotplug [thunderbolt]\n Call Trace:\n  <TASK>\n  dump_stack_lvl+0x6c/0x90\n  print_report+0xd1/0x630\n  kasan_report+0xdb/0x110\n  __asan_report_load4_noabort+0x14/0x20\n  tb_retimer_scan+0xffe/0x1550 [thunderbolt]\n  tb_scan_port+0xa6f/0x2060 [thunderbolt]\n  tb_handle_hotplug+0x17b1/0x3080 [thunderbolt]\n  process_one_work+0x626/0x1100\n  worker_thread+0x6c8/0xfa0\n  kthread+0x2c8/0x3a0\n  ret_from_fork+0x3a/0x80\n  ret_from_fork_asm+0x1a/0x30\n\nThis happens because the loop variable still gets incremented by one so\nmax becomes 3 instead of 2, and this makes the second loop read past the\nthe array declared on the stack.\n\nFix this by assigning to max directly in the loop body."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: thunderbolt: Se corrige la lectura fuera de los l\u00edmites de pila informada por KASAN en tb_retimer_scan() KASAN inform\u00f3 el siguiente problema: ERROR: KASAN: pila fuera de los l\u00edmites en tb_retimer_scan+0xffe/0x1550 [thunderbolt] Lectura de tama\u00f1o 4 en la direcci\u00f3n ffff88810111fc1c por la tarea kworker/u56:0/11 CPU: 0 UID: 0 PID: 11 Comm: kworker/u56:0 Tainted: GU 6.11.0+ #1387 Tainted: [U]=USER Workqueue: thunderbolt0 tb_handle_hotplug [thunderbolt] Rastreo de llamadas:  dump_stack_lvl+0x6c/0x90 print_report+0xd1/0x630 kasan_report+0xdb/0x110 __asan_report_load4_noabort+0x14/0x20 tb_retimer_scan+0xffe/0x1550 [thunderbolt] tb_scan_port+0xa6f/0x2060 [thunderbolt] tb_handle_hotplug+0x17b1/0x3080 [thunderbolt] process_one_work+0x626/0x1100 worker_thread+0x6c8/0xfa0 kthread+0x2c8/0x3a0 ret_from_fork+0x3a/0x80 ret_from_fork_asm+0x1a/0x30 Esto sucede porque la variable de bucle todav\u00eda se incrementa en uno, por lo que max se convierte en 3 en lugar de 2, y esto hace que el segundo bucle lea m\u00e1s all\u00e1 de la matriz declarada en la pila. Solucione este problema asignando a max directamente en el cuerpo del bucle."}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/08b2771e9270fbe1ed4fbbe93abe05ac7fe9861d", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/e9e1b20fae7de06ba36dd3f8dba858157bad233d", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}}