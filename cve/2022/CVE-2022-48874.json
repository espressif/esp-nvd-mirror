{"cve": {"id": "CVE-2022-48874", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-08-21T07:15:04.383", "lastModified": "2024-08-21T12:30:33.697", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nmisc: fastrpc: Fix use-after-free and race in fastrpc_map_find\n\nCurrently, there is a race window between the point when the mutex is\nunlocked in fastrpc_map_lookup and the reference count increasing\n(fastrpc_map_get) in fastrpc_map_find, which can also lead to\nuse-after-free.\n\nSo lets merge fastrpc_map_find into fastrpc_map_lookup which allows us\nto both protect the maps list by also taking the &fl->lock spinlock and\nthe reference count, since the spinlock will be released only after.\nAdd take_ref argument to make this suitable for all callers."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: misc: fastrpc: corrige use-after-free y ejecuci\u00f3n en fastrpc_map_find Actualmente, hay una ventana de ejecuci\u00f3n entre el punto en el que se desbloquea el mutex en fastrpc_map_lookup y el recuento de referencias aumenta (fastrpc_map_get ) en fastrpc_map_find, lo que tambi\u00e9n puede generar use-after-free. Entonces, fusionemos fastrpc_map_find con fastrpc_map_lookup, lo que nos permite proteger la lista de mapas tomando tambi\u00e9n el &amp;fl-&gt;lock spinlock y el recuento de referencias, ya que el spinlock se liberar\u00e1 solo despu\u00e9s. Agregue el argumento take_ref para que sea adecuado para todas las personas que llaman."}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/9446fa1683a7e3937d9970248ced427c1983a1c5", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/a50c5c25b6e7d2824698c0e6385f882a18f4a498", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}}